import os

def configure(conf):
    conf.env.CDS_MIXED_SIGNAL = True

    conf.load('cadence_ius')

    conf.env['NCELAB_OPTIONS'].extend([
        '-amsconnrules', 'ConnRules_12V_full_fast', 'ConnRules_12V_full_fast',
        '-libverbose',
        '-iereport',
        #'-amsinput','../ams.scs'
        '-access','+r',
    ])
    #conf.env['NCELAB_OPTIONS'].remove('-discipline')
    #conf.env['NCELAB_OPTIONS'].remove('logic')

def build(bld):
    bld ( features = 'cds_write_libs' )

    bld (
        name = 'compile_top',
        source = bld.convert_string_paths(
            [
                '../../source/systemverilog/interconnect.sv',
                '../../source/systemverilog/dac.sv',
                '../../source/verilog-ams/adc.vams',
                os.environ['BRICK_DIR']+'/source/verilog-ams/ConnRules12.vams'
            ]),
        features = 'cds_compile_hdl',
        verilog_search_paths = bld.convert_string_paths(['../../source/verilog'])
    )
    bld.add_group()
    bld (
        toplevel = 'worklib.interconn',
        features = 'cds_elab',
        always = True
    )

def run(bld):
    bld (
        features = 'ncsim',
        toplevel = 'worklib.interconn',
        stop_time = '100n',
    )

from waflib.Build import BuildContext
class one(BuildContext):
    cmd = 'run'
    fun = 'run'



