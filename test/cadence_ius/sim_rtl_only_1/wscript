
def configure(conf):
    conf.load('cadence_ius')
    conf.env.CDS_LIBS = {'mywork':'./mywork'}
    conf.env.CDS_WORKLIB = 'mywork'
    conf.env.NCELAB_OPTIONS.extend(['-access','+r'])

def build(bld):
    bld ( features = 'cds_write_libs' )

    bld (
        name = 'compile_top',
        source = bld.convert_string_paths(
            [
                '../../source/systemverilog/package.sv',
                '../../source/systemverilog/tb.sv',
                '../../source/systemverilog/top.sv',
                '../../source/systemverilog/inverter.sv',
                '../../source/systemverilog/inverter_array.sv',
            ]),
        features = 'cds_compile_hdl',
        verilog_search_paths = bld.convert_string_paths(['../../source/verilog'])
    )
    bld.add_group()
    bld (
        toplevel = 'mywork.tb',
        features = 'cds_elab',
        always = True
    )

def run(bld):
    bld (
        features = 'ncsim',
        toplevel = 'mywork.tb',
    )

from waflib.Build import BuildContext
class one(BuildContext):
    cmd = 'run'
    fun = 'run'

